#
#  Author: Hari Sekhon
#  Date: Tue Feb 4 09:53:28 2020 +0000
#
#  vim:ts=2:sts=2:sw=2:et
#
#  https://github.com/harisekhon/bash-tools
#
#  If you're using my code you're welcome to connect with me on LinkedIn and optionally send me feedback
#
#  https://www.linkedin.com/in/harisekhon
#

# MarketPlace:  https://github.com/marketplace?type=actions

name: CI Ubuntu

env:
  DEBUG: 1

on: # [push]
  push:
    branches:
      - master
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 10 30 * *'

jobs:
  build:
    #name: build
    timeout-minutes: 10
    #runs-on: ubuntu-latest

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-16.04]
#        node: [6, 8, 10]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-bash-tools  # ${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - uses: actions/cache@v1
      with:
        path: ~/.cpanm
        key: ${{ runner.os }}-cpanm-bash-tools  # ${{ hashFiles('**/cpan-requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-cpanm-
    - name: build
      run: make
    - name: test
      run: make test

    #- name: Run a multi-line script
    #  run: |
    #    echo Add other actions to build,
    #    echo test, and deploy your project.

# ============================================================================
# https://github.com/actions/cache
# ============================================================================
# Python
#   - uses: actions/cache@v1
#     if: startsWith(runner.os, 'Linux')
#     with:
#       path: ~/.cache/pip
#       key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#       restore-keys: |
#         ${{ runner.os }}-pip-
#
#   - uses: actions/cache@v1
#     if: startsWith(runner.os, 'macOS')
#     with:
#       path: ~/Library/Caches/pip
#       key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#       restore-keys: |
#         ${{ runner.os }}-pip-
# ============================================================================
# Perl
#   - uses: actions/cache@v1
#     with:
#       path: ~/.cpanm
#       key: ${{ runner.os }}-cpanm-${{ hashFiles('**/cpan-requirements.txt') }}
#       restore-keys: |
#         ${{ runner.os }}-cpanm-
# ============================================================================
# Go
#   - uses: actions/cache@v1
#     with:
#       path: ~/go/pkg/mod
#       key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#       restore-keys: |
#         ${{ runner.os }}-go-
# ============================================================================
# Java / Maven
#   - uses: actions/cache@v1
#     with:
#       path: ~/.m2/repository
#       key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#       restore-keys: |
#         ${{ runner.os }}-maven-
# ============================================================================
# Scala / SBT
#   - name: Cache SBT ivy cache
#     uses: actions/cache@v1
#     with:
#       path: ~/.ivy2/cache
#       key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('**/build.sbt') }}
#   - name: Cache SBT
#     uses: actions/cache@v1
#     with:
#       path: ~/.sbt
#       key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
# ============================================================================

#  docker:
#    #name: docker
#    runs-on:
#      - ubuntu-latest
#
#    steps:
#    - uses: docker://harisekhon/centos-dev
#    -  name: build & test
#      run: make build test
